{"ast":null,"code":"import React,{useEffect,useState}from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import Login from'./Login';import{useNavigate,BrowserRouter}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";function Root(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[isAdmin,setIsAdmin]=useState(true);const navigate=useNavigate();useEffect(()=>{console.log('isAdmin:',isAdmin);},[isAdmin]);const handleLoginSuccess=role=>{setIsLoggedIn(true);setIsAdmin(role==='admin');if(role==='admin'){navigate('/head/stock');}else{navigate('/stock');}};return isLoggedIn?/*#__PURE__*/_jsx(App,{admin:isAdmin}):/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess});}const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Root,{})}));reportWebVitals();","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","App","reportWebVitals","Login","useNavigate","BrowserRouter","jsx","_jsx","Root","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","navigate","console","log","handleLoginSuccess","role","admin","onLoginSuccess","root","createRoot","document","getElementById","render","children"],"sources":["C:/Users/admin/Documents/kiosk/kiosk_admin_front/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Login from './Login';\r\nimport { useNavigate, BrowserRouter } from 'react-router-dom';\r\n\r\nfunction Root() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); \r\n  const [isAdmin, setIsAdmin] = useState(true);       \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log('isAdmin:', isAdmin);\r\n  }, [isAdmin]);\r\n\r\n  const handleLoginSuccess = (role) => {\r\n    setIsLoggedIn(true);\r\n    setIsAdmin(role === 'admin');\r\n    if(role === 'admin'){\r\n      navigate('/head/stock');\r\n    } else {\r\n      navigate('/stock');\r\n    }\r\n  };\r\n\r\n  return isLoggedIn ? (\r\n    <App admin={isAdmin} />\r\n  ) : (\r\n    <Login onLoginSuccess={handleLoginSuccess} />\r\n  );\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <BrowserRouter>\r\n    <Root />\r\n  </BrowserRouter>\r\n);\r\n\r\nreportWebVitals();\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,OAASC,WAAW,CAAEC,aAAa,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAc,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9BN,SAAS,CAAC,IAAM,CACdgB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEJ,OAAO,CAAC,CAClC,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEb,KAAM,CAAAK,kBAAkB,CAAIC,IAAI,EAAK,CACnCP,aAAa,CAAC,IAAI,CAAC,CACnBE,UAAU,CAACK,IAAI,GAAK,OAAO,CAAC,CAC5B,GAAGA,IAAI,GAAK,OAAO,CAAC,CAClBJ,QAAQ,CAAC,aAAa,CAAC,CACzB,CAAC,IAAM,CACLA,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAED,MAAO,CAAAJ,UAAU,cACfF,IAAA,CAACN,GAAG,EAACiB,KAAK,CAAEP,OAAQ,CAAE,CAAC,cAEvBJ,IAAA,CAACJ,KAAK,EAACgB,cAAc,CAAEH,kBAAmB,CAAE,CAC7C,CACH,CAEA,KAAM,CAAAI,IAAI,CAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTjB,IAAA,CAACF,aAAa,EAAAoB,QAAA,cACZlB,IAAA,CAACC,IAAI,GAAE,CAAC,CACK,CACjB,CAAC,CAEDN,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}